496. Next Greater Element I
class Solution:
    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:
        s=[]
        dic={}
        for num in nums2:
            while s and s[-1]<num:
                dic[s.pop()]=num
            s.append(num)
        ans=[]
        for n in nums1:
            if n in dic:
                ans.append(dic[n])
            else:
                ans.append(-1)
        return ans


503. Next Greater Element II
from collections import deque
class Solution:
    def nextGreaterElements(self, nums: List[int]) -> List[int]:
        length = len(nums)
        nums.extend(nums)
        stack = deque()
        ans = []
        print(nums)
        for i in range(len(nums)-1,-1,-1):
            while len(stack)>0 and stack[len(stack)-1]<=nums[i]:
                stack.pop()
            if len(stack)==0:
                ans.append(-1)
            else:
                ans.append(stack[len(stack)-1])
            stack.append(nums[i])
        ans = ans[::-1]
        return ans[:length]
or 

class Solution:
    def nextGreaterElements(self, nums: List[int]) -> List[int]:
        n = len(nums)
        result = [-1] * n
        stack = [0]
        for i in range(1,2*n):
            if len(stack) < 1:
                break
            while len(stack) and nums[i%n] > nums[stack[-1]]:
                result[stack.pop()] = nums[i%n]
            if i < n:
                stack.append(i)
            
        return result
